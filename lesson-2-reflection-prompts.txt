What happens when you initialize a repository? Why do you need to do it?

--So that git can keep track of the files in the repository

How is the staging area different from the working directory and the repository?
What value do you think it offers?

--It allows separation of logical changes for each commit rather than including all the files in the respository.

How can you use the staging area to make sure you have one commit per logical
change?

--Just add the files with the logical change into the staging area before committing.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

--When making large-scale changes in the code structure rather than just incremental ones.

How do the diagrams help you visualize the branch structure?

--Shows me where shit actually is.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

--All the code in the tips of the brances is combined. Because shit gets confusing otherwise.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

-- Convenient to have it merge automatically. I guess sometimes mergine automatically might cause bugs if changes are made to different parts of code.
